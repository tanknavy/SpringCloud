server:
  port: 8001

#开启springboot的debug模式
#debug: true
#多 profile配置，默认使用这个
#指定激活那个配置文件
#spring.profiles.active=dev
#日志级别 trace<debug<info<warn<error，默认info
#指定日志级别
#logging.level.com.tanknavy.hello=warn

spring:
  application:
    name: cloud-payment-service
  datasource:
    #为了Druid数据源能使用配置参数，需要写config类，注入Druid，@ConfigurationProperties指定该文件来绑定值
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/spring-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    driver-class-name: com.mysql.jdbc.Driver
    #driver-class-name: org.gjt.mm.mysql.Driver
    username: hbstudent
    password: hbstudent

    # DataSourceInitlizer可以自动运行DDL,DML文件，schem*.sql,data.sql文件名格式，这里可以指定路径
    # 发现在sql目录下找不到文件
  #    schema:
  #      - classpath:department.sql
  #      - classpath:employee.sql

mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  #全部配置文件
  mapper-locations: classpath:mybatis/mapper/*.xml
#  mapperlocations: classpath:mybatis/mapper/*.xml
  #所有entity别名类所在包, 实体类bean
  type-aliases-package: com.tanknavy.springcloud.entities

# spring actuator
management:
  security:
    enabled: false
  context-path: manage
  port: 8101