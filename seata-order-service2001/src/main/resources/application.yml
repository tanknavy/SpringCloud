server:
  port: 2001

#开启springboot的debug模式
#debug: true
#多 profile配置，默认使用这个
#指定激活那个配置文件
#spring.profiles.active=dev
#日志级别 trace<debug<info<warn<error，默认info
#指定日志级别
logging:
  level:
    io:
      seata: info

spring:
  application:
    name: seata-order-service
  cloud:
    alibaba:
      seata:
        #在seata server的file.conf配置文件中service下事务组名称
        tx-service-group: fsp_tx_group
    nacos:
      discovery:
        server-addr: localhost:8848
  datasource:
    #为了Druid数据源能使用配置参数，需要写config类，注入Druid，@ConfigurationProperties指定该文件来绑定值
    #在MainApp中exclude = DataSourceAutoConfiguration.class, @Configuration配置Seata作为数据代理DataSourceProxy...
    #type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/seata_order?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    driver-class-name: com.mysql.jdbc.Driver
    #driver-class-name: org.gjt.mm.mysql.Driver
    username: hbstudent
    password: hbstudent

#feign:
#  hystrix:
#    enabled: false


    # DataSourceInitlizer可以自动运行DDL,DML文件，schem*.sql,data.sql文件名格式，这里可以指定路径
    # 发现在sql目录下找不到文件
  #    schema:
  #      - classpath:department.sql
  #      - classpath:employee.sql

mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  #mybatis全部配置文件
  mapper-locations: classpath:mybatis/mapper/*.xml
  #自定义mybatis属性
#  mapperLocations: classpath:mybatis/mapper/*.xmlL
  #所有entity别名类所在包, 实体类bean
#  type-aliases-package: com.tanknavy.springcloud.domainmybatis-config.xml

# spring actuator
management:
  security:
    enabled: false
  context-path: manage
  port: 8101